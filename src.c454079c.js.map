{"version":3,"sources":["src/paddle.js","src/input.js","src/ball.js","src/brick.js","src/rain.js","src/debris.js","src/xplosion.js","src/collision.js","src/game.js","src/index.js"],"names":["Paddle","game","width","height","maxSpeed","x","speed","color","initialAcc","dt","ctx","fillStyle","fillRect","InputHandler","paddle","document","addEventListener","event","keyCode","moveLeft","moveRight","start","Ball","startX","startY","startXSpeed","startYSpeed","acceleration","wallBounce","graceWidth","ballTrail","y","radius","xSpeed","ySpeed","randomLight","Math","abs","random","gameState","push","beginPath","strokeStyle","lineWidth","arc","PI","stroke","fill","closePath","reverse","length","moveTo","lineTo","shift","Brick","sizeX","sizeY","brickPerRow","brickRows","startCap","brickArray","doMoveBricks","moveToStage","colors","moveBricks","forEach","brick","location","hp","cap","capY","count","generateBrickArray","stage","newArray","brickHp","round","beginGen","Rain","element","hrElement","counter","i","createElement","style","left","floor","animationDuration","animationDelay","appendChild","querySelectorAll","elm","remove","Depris","xSize","ySize","fallSpeed","xDir","deprisTrail","addTrail","hitGround","groundHeight","fallTime","Xplosion","delay","evol","xploArray","splice","CollisionDetection","ball","bricks","score","pieces","debrisArray","Debris","startScreen","getElementById","Game","updateGround","bestScore","collisionDetection","scoreDisplay","audioSwitch","querySelector","bestScoreDisplay","music","rain","canvas","time","update","end","hidden","waitAndMoveBricks","debris","checked","play","pause","draw","xplo","index","textContent","currentTime","getContext","lastTime","gameLoop","timestamp","time2","Date","fps","innerHTML","clearRect","requestAnimationFrame"],"mappings":"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","file":"src.c454079c.js","sourceRoot":"..","sourcesContent":["export default class Paddle {\r\n  constructor(game) {\r\n    this.width = 100;\r\n    this.height = 20;\r\n    this.maxSpeed = 350;\r\n    this.x = 300;\r\n    this.speed = 0;\r\n    this.color = \"#FFA500\";\r\n    this.initialAcc = 125;\r\n  }\r\n  update(dt) {\r\n    dt = dt / 4;\r\n    this.x += (this.speed * dt) / 100;\r\n    if (this.speed > 0) {\r\n      this.speed -= 1;\r\n    } else if (this.speed < 0) {\r\n      this.speed += 1;\r\n    }\r\n    if (this.x <= 0) {\r\n      this.x = 0;\r\n    }\r\n    if (this.x > 700) {\r\n      this.x = 700;\r\n    }\r\n    if (this.speed > this.maxSpeed) {\r\n      this.speed = this.maxSpeed;\r\n    }\r\n    if (this.speed < -this.maxSpeed) {\r\n      this.speed = -this.maxSpeed;\r\n    }\r\n  }\r\n\r\n  draw(ctx) {\r\n    ctx.fillStyle = this.color;\r\n    ctx.fillRect(this.x, 580, this.width, this.height);\r\n  }\r\n  moveLeft() {\r\n    this.speed -= this.initialAcc;\r\n  }\r\n  moveRight() {\r\n    this.speed += this.initialAcc;\r\n  }\r\n}\r\n","export default class InputHandler {\r\n  constructor(paddle, game) {\r\n    document.addEventListener(\"keydown\", (event) => {\r\n      switch (event.keyCode) {\r\n        case 37:\r\n          paddle.moveLeft();\r\n          break;\r\n\r\n        case 39:\r\n          paddle.moveRight();\r\n          break;\r\n        case 32:\r\n          game.start();\r\n          break;\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default class Ball {\r\n  constructor(game) {\r\n    this.startX = 50;\r\n    this.startY = 100;\r\n    this.startXSpeed = 130;\r\n    this.startYSpeed = 0;\r\n    this.acceleration = 25;\r\n    this.wallBounce = 6;\r\n    this.graceWidth = 10;\r\n    this.ballTrail = [];\r\n\r\n    this.x = this.startX;\r\n    this.y = this.startY;\r\n\r\n    this.radius = 8;\r\n\r\n    this.color = \"rgba(255,165,0,1.000)\";\r\n\r\n    this.xSpeed = this.startXSpeed;\r\n    this.ySpeed = this.startYSpeed;\r\n  }\r\n  update(paddle, game, dt) {\r\n    dt = dt / 5;\r\n    this.x += (this.xSpeed * dt) / 200;\r\n    this.y += (this.ySpeed * dt) / 200;\r\n    let randomLight = (Math.abs(this.ySpeed) + Math.abs(this.xSpeed)) / 10;\r\n    this.color = `rgba(${255 - randomLight},${165 - randomLight},0,1)`;\r\n    if (this.ySpeed >= 0) {\r\n      this.ySpeed += 1;\r\n    }\r\n    if (this.ySpeed <= 0) {\r\n      this.ySpeed += 1;\r\n    }\r\n    if (\r\n      this.y > 585 &&\r\n      this.x > paddle.x - this.graceWidth &&\r\n      this.x < paddle.x + (paddle.width + this.graceWidth)\r\n    ) {\r\n      this.ySpeed = -(this.ySpeed + this.acceleration);\r\n      this.xSpeed += paddle.speed + Math.random() * 50;\r\n    }\r\n    if (this.y < 0) {\r\n      this.ySpeed = -(this.ySpeed - this.acceleration);\r\n    }\r\n    if (this.x > 800) {\r\n      this.xSpeed = -this.xSpeed;\r\n      this.x -= this.wallBounce;\r\n    }\r\n    if (this.x < 0) {\r\n      this.xSpeed = -this.xSpeed;\r\n      this.x += this.wallBounce;\r\n    }\r\n    if (this.y > 600) {\r\n      game.gameState = 0;\r\n      this.x = this.startX;\r\n      this.y = this.startY;\r\n      this.xSpeed = this.startXSpeed;\r\n      this.ySpeed = this.startYSpeed;\r\n    }\r\n    this.ballTrail.push([this.x, this.y, this.color]);\r\n  }\r\n  draw(ctx) {\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = this.color;\r\n    ctx.fillStyle = this.color;\r\n    ctx.lineWidth = 1;\r\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\r\n    ctx.stroke();\r\n    ctx.fill();\r\n    ctx.closePath();\r\n    this.ballTrail.reverse();\r\n    for (let x = 1; x < this.ballTrail.length; x++) {\r\n      ctx.strokeStyle = this.ballTrail[x][2];\r\n      ctx.lineWidth = x < 5 ? 15 : 15 * (75 / (75 + x * 4));\r\n      ctx.beginPath();\r\n      ctx.moveTo(this.ballTrail[x - 1][0], this.ballTrail[x - 1][1]);\r\n      ctx.lineTo(this.ballTrail[x][0], this.ballTrail[x][1]);\r\n      ctx.stroke();\r\n      ctx.closePath();\r\n    }\r\n    if (this.ballTrail.length > 150) {\r\n      this.ballTrail.reverse();\r\n      this.ballTrail.shift();\r\n    }\r\n  }\r\n}\r\n","export default class Brick {\r\n  constructor() {\r\n    this.sizeX = 52;\r\n    this.sizeY = 20;\r\n    this.brickPerRow = 15;\r\n    this.brickRows = 4;\r\n    this.startCap = 0;\r\n    this.brickArray = [];\r\n    this.doMoveBricks = 0;\r\n    this.moveToStage = 1;\r\n    this.colors = `rgba(255,${0 + (this.moveToStage - 1) * 33},${\r\n      0 + (this.moveToStage - 1) * 33\r\n    },1)`;\r\n  }\r\n  update() {\r\n    if (this.doMoveBricks > 0) {\r\n      this.doMoveBricks += 1;\r\n    }\r\n    if (this.doMoveBricks > 400) {\r\n      this.doMoveBricks = 0;\r\n      this.moveBricks(this.moveToStage);\r\n    }\r\n  }\r\n  draw(ctx) {\r\n    this.brickArray.forEach((brick) => {\r\n      ctx.fillStyle = this.colors = `rgba(255,${\r\n        165 + (brick[0] - 1) * 33\r\n      },0,1)`;\r\n\r\n      if (brick[0] > 0) {\r\n        ctx.fillRect(brick[1], brick[2], this.sizeX, this.sizeY);\r\n      }\r\n    });\r\n  }\r\n  generateBrickArray(location, hp) {\r\n    let cap = this.startCap;\r\n    let capY = location * 2;\r\n    let count = 0;\r\n    for (let x = 0; x < this.brickPerRow; x++) {\r\n      this.brickArray.push([\r\n        hp,\r\n        cap + x * this.sizeX,\r\n        capY + location * this.sizeY\r\n      ]);\r\n      if (count < this.brickPerRow - 1) {\r\n        cap += 2;\r\n        count++;\r\n      }\r\n    }\r\n  }\r\n  beginGen() {\r\n    this.brickArray = [];\r\n    for (let x = 0; x < this.brickRows; x++) {\r\n      this.generateBrickArray(x, 1);\r\n    }\r\n  }\r\n  waitAndMoveBricks(stage) {\r\n    this.doMoveBricks = 1;\r\n    this.moveToStage = stage;\r\n  }\r\n  moveBricks(stage) {\r\n    let newArray = [];\r\n    let brickHp = Math.round(stage / 3) + 1;\r\n    this.brickArray.forEach((brick) => {\r\n      newArray.push([brick[0], brick[1], brick[2] + this.sizeY + 2]);\r\n    });\r\n    this.brickArray = newArray;\r\n\r\n    this.generateBrickArray(0, brickHp);\r\n  }\r\n  start() {\r\n    this.brickArray = [];\r\n    this.doMoveBricks = 0;\r\n    this.moveToStage = 1;\r\n    this.beginGen();\r\n  }\r\n  end() {\r\n    this.brickArray = [];\r\n  }\r\n}\r\n","export default class Rain {\r\n  start(element, count) {\r\n    let hrElement;\r\n    let counter = count;\r\n    for (let i = 0; i < counter; i++) {\r\n      hrElement = document.createElement(\"HR\");\r\n\r\n      hrElement.style.left = Math.floor(Math.random() * 1000) - 100 + \"px\";\r\n      hrElement.style.animationDuration = 0.2 + Math.random() * 0.3 + \"s\";\r\n      hrElement.style.animationDelay = Math.random() * 5 + \"s\";\r\n\r\n      element.appendChild(hrElement);\r\n    }\r\n  }\r\n  end() {\r\n    document.querySelectorAll(\"HR\").forEach((elm) => elm.remove());\r\n  }\r\n}\r\n","export default class Depris {\r\n  constructor(x, y, color) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.xSize = 12 + Math.random() * 24;\r\n    this.ySize = 6 + Math.random() * 12;\r\n    this.fallSpeed = 2;\r\n    this.color = color;\r\n    this.xDir = Math.random() * 4 - 2;\r\n    this.deprisTrail = [];\r\n    this.addTrail = 0;\r\n    this.hitGround = 0;\r\n  }\r\n  update(game, dt) {\r\n    dt = dt / 4;\r\n    let height = 10000;\r\n    for (\r\n      let x = Math.round(this.x) + 1;\r\n      x < this.x + Math.round(this.xSize) - 1;\r\n      x++\r\n    ) {\r\n      if (game.groundHeight[x] < height) {\r\n        height = game.groundHeight[x];\r\n      }\r\n    }\r\n    if (this.y < height - this.ySize) {\r\n      this.y += this.fallSpeed / dt;\r\n      this.x += this.xDir / dt;\r\n      this.xDir += this.xDir < 0 ? 0.008 : -0.008;\r\n      if (this.addTrail >= 6) {\r\n        this.addTrail = 0;\r\n        this.deprisTrail.push([\r\n          this.x + this.xSize / 2,\r\n          this.y + this.ySize / 2,\r\n          this.color\r\n        ]);\r\n      } else {\r\n        this.addTrail++;\r\n      }\r\n    } else {\r\n      if (this.hitGround === 0) this.hitGround = 1;\r\n      if (this.hitGround === 1) {\r\n        for (\r\n          let x = Math.round(this.x);\r\n          x < this.x + Math.round(this.xSize);\r\n          x++\r\n        ) {\r\n          game.groundHeight[x] = game.groundHeight[x] - this.ySize / 3;\r\n          this.hitGround = 2;\r\n        }\r\n      }\r\n      this.deprisTrail.shift();\r\n      this.deprisTrail.reverse();\r\n    }\r\n  }\r\n  draw(ctx) {\r\n    this.deprisTrail.reverse();\r\n    let fallTime = 0;\r\n    for (let x = 1; x < this.deprisTrail.length; x++) {\r\n      ctx.fillStyle = `rgba(265,165,0,${0.2 - fallTime / 200}`;\r\n      ctx.lineWidth = 2;\r\n      ctx.beginPath();\r\n      ctx.fillRect(\r\n        this.deprisTrail[x][0] - this.xSize / 2,\r\n        this.deprisTrail[x][1],\r\n        this.xSize * ((300 - fallTime * 5) / 300),\r\n        this.ySize * ((300 - fallTime * 5) / 300)\r\n      );\r\n      ctx.fill();\r\n      ctx.stroke();\r\n      ctx.closePath();\r\n      fallTime++;\r\n    }\r\n    if (this.deprisTrail.length > 4) {\r\n      this.deprisTrail.reverse();\r\n      this.deprisTrail.shift();\r\n    }\r\n\r\n    ctx.fillStyle = `rgba(${255 + this.y / 3},${\r\n      165 + (this.color - 1) * 33 + this.y / 6\r\n    },0,1)`;\r\n    ctx.fillRect(this.x, this.y, this.xSize, this.ySize);\r\n  }\r\n}\r\n","export default class Xplosion {\r\n  constructor(x, y, delay) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.color = \"rgba(255,165,0,0.4)\";\r\n    this.evol = 0;\r\n    this.delay = delay;\r\n  }\r\n  draw(ctx) {\r\n    if (this.delay <= 0) {\r\n      if (this.evol < 100) {\r\n        ctx.beginPath();\r\n        ctx.fillStyle = `rgba(${255 - this.evol / 100},165,0,0.25)`;\r\n        ctx.lineWidth = 0;\r\n        ctx.arc(this.x, this.y, this.evol, 0, 2 * Math.PI);\r\n        this.evol++;\r\n        ctx.fill();\r\n        ctx.closePath();\r\n      }\r\n    } else {\r\n      this.delay--;\r\n    }\r\n  }\r\n  update(game, element) {\r\n    if (this.evol > 100) {\r\n      game.xploArray[element].splice();\r\n    }\r\n  }\r\n}\r\n","import Debris from \"./debris\";\r\nimport Xplosion from \"./xplosion\";\r\nexport default class CollisionDetection {\r\n  update(ball, bricks, game) {\r\n    if (game.gameState > 0) {\r\n      bricks.brickArray.forEach((brick) => {\r\n        if (\r\n          ball.x + ball.radius * 2 >= brick[1] &&\r\n          ball.x <= brick[1] + bricks.sizeX &&\r\n          ball.y + ball.radius * 2 >= brick[2] &&\r\n          ball.y <= brick[2] + bricks.sizeY\r\n        ) {\r\n          if (brick[0] > 0) {\r\n            brick[0] -= 1;\r\n            if (brick[0] === 0) {\r\n              for (let x = 0; x < 10; x++) {\r\n                game.xploArray.push(\r\n                  new Xplosion(\r\n                    brick[1] + Math.random() * 20 - 10,\r\n                    brick[2] + Math.random() * 20 - 10,\r\n                    x * 10\r\n                  )\r\n                );\r\n              }\r\n            }\r\n            game.score += 1;\r\n            ball.ySpeed = -(ball.ySpeed / 1.5);\r\n            ball.xSpeed = -(ball.xSpeed / 1.5) + (Math.random() * 500 - 250);\r\n            ball.y += 3;\r\n            ball.ySpeed += 15;\r\n            let pieces = 5 + Math.random() * 12;\r\n            while (pieces > 0) {\r\n              game.debrisArray.push(\r\n                new Debris(\r\n                  Math.random() * 40 - 20 + brick[1],\r\n                  Math.random() * 20 - 10 + brick[2],\r\n                  [brick[0]],\r\n                  game\r\n                )\r\n              );\r\n              pieces--;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import Paddle from \"./paddle\";\r\nimport InputHandler from \"./input\";\r\nimport Ball from \"./ball\";\r\nimport Brick from \"./brick\";\r\nimport Rain from \"./rain\";\r\nimport CollisionDetection from \"./collision\";\r\n\r\nlet startScreen = document.getElementById(\"startScreen\");\r\n\r\nexport default class Game {\r\n  constructor() {\r\n    this.paddle = new Paddle(this);\r\n    this.ball = new Ball(this);\r\n    this.brick = new Brick();\r\n    this.debrisArray = [];\r\n    this.groundHeight = [];\r\n    for (let x = 0; x < 800; x++) {\r\n      this.updateGround(x, 600);\r\n    }\r\n    this.xploArray = [];\r\n    this.score = 0;\r\n    this.bestScore = 0;\r\n    this.stage = 1;\r\n    this.collisionDetection = new CollisionDetection();\r\n    this.scoreDisplay = document.getElementById(\"score\");\r\n    this.audioSwitch = document.querySelector(\"input\");\r\n    this.bestScoreDisplay = document.getElementById(\"best\");\r\n\r\n    this.music = document.getElementById(\"bgaudio\");\r\n    this.rain = new Rain();\r\n    this.canvas = document.getElementById(\"rain\");\r\n    this.rain.start(this.canvas, 33);\r\n    let gameState = 0;\r\n    new InputHandler(this.paddle, this);\r\n  }\r\n  updateGround(x, height) {\r\n    this.groundHeight[x] = height;\r\n  }\r\n\r\n  update(time) {\r\n    if (this.gameState > 0) {\r\n      this.paddle.update(time);\r\n      this.ball.update(this.paddle, this, time);\r\n      this.brick.update(time);\r\n      this.collisionDetection.update(this.ball, this.brick, this);\r\n    }\r\n    if (this.gameState === 0) {\r\n      this.brick.end();\r\n      startScreen.hidden = false;\r\n      this.paddle.x = 300;\r\n    }\r\n    if (this.score > 4 * this.stage) {\r\n      this.brick.waitAndMoveBricks(this.stage);\r\n      this.rain.start(this.canvas, 10);\r\n      this.stage += 1;\r\n    }\r\n    this.game = this;\r\n    this.debrisArray.forEach((debris) => {\r\n      debris.update(this, time);\r\n    });\r\n    if (this.audioSwitch.checked) {\r\n      this.music.play();\r\n    } else {\r\n      this.music.pause();\r\n    }\r\n  }\r\n\r\n  draw(ctx) {\r\n    this.brick.draw(ctx);\r\n    this.debrisArray.forEach((debris) => {\r\n      debris.draw(ctx);\r\n    });\r\n    this.xploArray.forEach((xplo, index) => {\r\n      xplo.draw(ctx);\r\n      xplo.update(this, index);\r\n    });\r\n    this.ball.draw(ctx);\r\n    this.paddle.draw(ctx);\r\n    this.scoreDisplay.textContent = this.score;\r\n    if (this.score > this.bestScoreDisplay.textContent) {\r\n      this.bestScoreDisplay.textContent = this.score;\r\n    }\r\n  }\r\n  start() {\r\n    this.rain.end();\r\n    startScreen.hidden = true;\r\n    this.debrisArray = [];\r\n    this.xploArray = [];\r\n    this.score = 0;\r\n    this.stage = 1;\r\n    this.brick.start();\r\n    this.gameState = 1;\r\n    this.ball.ballTrail = [];\r\n    this.groundHeight = [];\r\n    for (let x = 0; x < 800; x++) {\r\n      let height = 600;\r\n      this.groundHeight[x] = height;\r\n    }\r\n    this.canvas = document.getElementById(\"rain\");\r\n    this.rain.start(this.canvas, 5);\r\n    this.music.currentTime = 0;\r\n    this.music.play();\r\n  }\r\n}\r\n","import \"./styles.css\";\nimport Game from \"./game.js\";\nlet canvas = document.getElementById(\"game\");\nlet ctx = canvas.getContext(\"2d\");\n\nlet game = new Game();\nlet lastTime = 0;\n\nfunction gameLoop(timestamp) {\n  var time2 = new Date();\n  var fps = 1000 / (time2 - time);\n  var dt = time2 - time;\n  time = time2;\n\n  document.getElementById(\"fpsCounter\").innerHTML = fps;\n\n  ctx.clearRect(0, 0, 800, 600);\n  game.update(dt);\n  game.draw(ctx);\n\n  requestAnimationFrame(gameLoop);\n}\nvar time = new Date(),\n  i = 0;\nrequestAnimationFrame(gameLoop);\n"]}