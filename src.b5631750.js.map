{"version":3,"sources":["src/paddle.js","src/input.js","src/ball.js","src/brick.js","src/debris.js","src/xplosion.js","src/collision.js","src/game.js","src/index.js"],"names":["Paddle","game","width","height","maxSpeed","x","speed","color","initialAcc","ctx","fillStyle","fillRect","InputHandler","paddle","document","addEventListener","event","keyCode","moveLeft","moveRight","start","Ball","startX","startY","startXSpeed","startYSpeed","acceleration","ballTrail","y","radius","xSpeed","ySpeed","graceWidth","randomLight","Math","abs","random","gameState","push","beginPath","strokeStyle","lineWidth","arc","PI","stroke","fill","closePath","reverse","length","moveTo","lineTo","shift","Brick","sizeX","sizeY","brickPerRow","brickRows","startCap","brickArray","doMoveBricks","moveToStage","colors","moveBricks","forEach","brick","location","hp","cap","capY","count","generateBrickArray","stage","newArray","brickHp","round","beginGen","Depris","xSize","ySize","fallSpeed","xDir","deprisTrail","addTrail","hitGround","groundHeight","fallTime","Xplosion","delay","evol","element","xploArray","splice","CollisionDetection","ball","bricks","score","pieces","debrisArray","Debris","startScreen","getElementById","Game","updateGround","bestScore","collisionDetection","scoreDisplay","audioSwitch","querySelector","bestScoreDisplay","music","time","update","end","hidden","waitAndMoveBricks","debris","checked","play","pause","draw","xplo","index","textContent","currentTime","canvas","getContext","lastTime","gameLoop","timestamp","timeDiff","clearRect","requestAnimationFrame"],"mappings":"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","file":"src.b5631750.js","sourceRoot":"..","sourcesContent":["export default class Paddle {\r\n  constructor(game) {\r\n    this.width = 100;\r\n    this.height = 20;\r\n    this.maxSpeed = 350;\r\n    this.x = 300;\r\n    this.speed = 0;\r\n    this.color = \"#FFA500\";\r\n    this.initialAcc = 125;\r\n  }\r\n  update() {\r\n    this.x += this.speed / 100;\r\n    if (this.speed > 0) {\r\n      this.speed -= 1;\r\n    } else if (this.speed < 0) {\r\n      this.speed += 1;\r\n    }\r\n    if (this.x <= 0) {\r\n      this.x = 0;\r\n    }\r\n    if (this.x > 700) {\r\n      this.x = 700;\r\n    }\r\n    if (this.speed > this.maxSpeed) {\r\n      this.speed = this.maxSpeed;\r\n    }\r\n    if (this.speed < -this.maxSpeed) {\r\n      this.speed = -this.maxSpeed;\r\n    }\r\n  }\r\n\r\n  draw(ctx) {\r\n    ctx.fillStyle = this.color;\r\n    ctx.fillRect(this.x, 580, this.width, this.height);\r\n  }\r\n  moveLeft() {\r\n    this.speed -= this.initialAcc;\r\n  }\r\n  moveRight() {\r\n    this.speed += this.initialAcc;\r\n  }\r\n}\r\n","export default class InputHandler {\r\n  constructor(paddle, game) {\r\n    document.addEventListener(\"keydown\", (event) => {\r\n      switch (event.keyCode) {\r\n        case 37:\r\n          paddle.moveLeft();\r\n          break;\r\n\r\n        case 39:\r\n          paddle.moveRight();\r\n          break;\r\n        case 32:\r\n          game.start();\r\n          break;\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default class Ball {\r\n  constructor(game) {\r\n    this.startX = 50;\r\n    this.startY = 100;\r\n    this.startXSpeed = 130;\r\n    this.startYSpeed = 0;\r\n    this.acceleration = 10;\r\n    this.ballTrail = [];\r\n\r\n    this.x = this.startX;\r\n    this.y = this.startY;\r\n\r\n    this.radius = 8;\r\n\r\n    this.color = \"rgba(255,165,0,1.000)\";\r\n\r\n    this.xSpeed = this.startXSpeed;\r\n    this.ySpeed = this.startYSpeed;\r\n\r\n    this.graceWidth = 0;\r\n  }\r\n  update(paddle, game) {\r\n    this.x += this.xSpeed / 200;\r\n    this.y += this.ySpeed / 200;\r\n    let randomLight = (Math.abs(this.ySpeed) + Math.abs(this.xSpeed)) / 10;\r\n    this.color = `rgba(${255 - randomLight},${165 - randomLight},0,1)`;\r\n    if (this.ySpeed >= 0) {\r\n      this.ySpeed += 1;\r\n    }\r\n    if (this.ySpeed <= 0) {\r\n      this.ySpeed += 1;\r\n    }\r\n    if (\r\n      this.y > 585 &&\r\n      this.x > paddle.x - this.graceWidth &&\r\n      this.x < paddle.x + (paddle.width + this.graceWidth)\r\n    ) {\r\n      this.ySpeed = -(this.ySpeed + this.acceleration);\r\n      this.xSpeed += paddle.speed + Math.random() * 50;\r\n    }\r\n    if (this.y < 0) {\r\n      this.ySpeed = -(this.ySpeed - this.acceleration);\r\n    }\r\n    if (this.x > 780 || this.x < 0) {\r\n      this.xSpeed = -this.xSpeed;\r\n    }\r\n    if (this.y > 600) {\r\n      game.gameState = 0;\r\n      this.x = this.startX;\r\n      this.y = this.startY;\r\n      this.xSpeed = this.startXSpeed;\r\n      this.ySpeed = this.startYSpeed;\r\n    }\r\n    this.ballTrail.push([this.x, this.y, this.color]);\r\n  }\r\n  draw(ctx) {\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = this.color;\r\n    ctx.fillStyle = this.color;\r\n    ctx.lineWidth = 1;\r\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\r\n    ctx.stroke();\r\n    ctx.fill();\r\n    ctx.closePath();\r\n    this.ballTrail.reverse();\r\n    for (let x = 1; x < this.ballTrail.length; x++) {\r\n      ctx.strokeStyle = this.ballTrail[x][2];\r\n      ctx.lineWidth = x < 5 ? 15 : 15 * (75 / (75 + x * 4));\r\n      ctx.beginPath();\r\n      ctx.moveTo(this.ballTrail[x - 1][0], this.ballTrail[x - 1][1]);\r\n      ctx.lineTo(this.ballTrail[x][0], this.ballTrail[x][1]);\r\n      ctx.stroke();\r\n      ctx.closePath();\r\n    }\r\n    if (this.ballTrail.length > 150) {\r\n      this.ballTrail.reverse();\r\n      this.ballTrail.shift();\r\n    }\r\n  }\r\n}\r\n","export default class Brick {\r\n  constructor() {\r\n    this.sizeX = 52;\r\n    this.sizeY = 20;\r\n    this.brickPerRow = 15;\r\n    this.brickRows = 4;\r\n    this.startCap = 0;\r\n    this.brickArray = [];\r\n    this.doMoveBricks = 0;\r\n    this.moveToStage = 1;\r\n    this.colors = `rgba(255,${0 + (this.moveToStage - 1) * 33},${\r\n      0 + (this.moveToStage - 1) * 33\r\n    },1)`;\r\n  }\r\n  update() {\r\n    if (this.doMoveBricks > 0) {\r\n      this.doMoveBricks += 1;\r\n    }\r\n    if (this.doMoveBricks > 400) {\r\n      this.doMoveBricks = 0;\r\n      this.moveBricks(this.moveToStage);\r\n    }\r\n  }\r\n  draw(ctx) {\r\n    this.brickArray.forEach((brick) => {\r\n      ctx.fillStyle = this.colors = `rgba(255,${\r\n        165 + (brick[0] - 1) * 33\r\n      },0,1)`;\r\n\r\n      if (brick[0] > 0) {\r\n        ctx.fillRect(brick[1], brick[2], this.sizeX, this.sizeY);\r\n      }\r\n    });\r\n  }\r\n  generateBrickArray(location, hp) {\r\n    let cap = this.startCap;\r\n    let capY = location * 2;\r\n    let count = 0;\r\n    for (let x = 0; x < this.brickPerRow; x++) {\r\n      this.brickArray.push([\r\n        hp,\r\n        cap + x * this.sizeX,\r\n        capY + location * this.sizeY\r\n      ]);\r\n      if (count < this.brickPerRow - 1) {\r\n        cap += 2;\r\n        count++;\r\n      }\r\n    }\r\n  }\r\n  beginGen() {\r\n    this.brickArray = [];\r\n    for (let x = 0; x < this.brickRows; x++) {\r\n      this.generateBrickArray(x, 1);\r\n    }\r\n  }\r\n  waitAndMoveBricks(stage) {\r\n    this.doMoveBricks = 1;\r\n    this.moveToStage = stage;\r\n  }\r\n  moveBricks(stage) {\r\n    let newArray = [];\r\n    let brickHp = Math.round(stage / 3) + 1;\r\n    this.brickArray.forEach((brick) => {\r\n      newArray.push([brick[0], brick[1], brick[2] + this.sizeY + 2]);\r\n    });\r\n    this.brickArray = newArray;\r\n\r\n    this.generateBrickArray(0, brickHp);\r\n  }\r\n  start() {\r\n    this.brickArray = [];\r\n    this.doMoveBricks = 0;\r\n    this.moveToStage = 1;\r\n    this.beginGen();\r\n  }\r\n  end() {\r\n    this.brickArray = [];\r\n  }\r\n}\r\n","export default class Depris {\r\n  constructor(x, y, color) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.xSize = 10 + Math.random() * 20;\r\n    this.ySize = 5 + Math.random() * 10;\r\n    this.fallSpeed = 2;\r\n    this.color = color;\r\n    this.xDir = Math.random() * 4 - 2;\r\n    this.deprisTrail = [];\r\n    this.addTrail = 0;\r\n    this.hitGround = 0;\r\n  }\r\n  update(game) {\r\n    let height = 10000;\r\n    for (\r\n      let x = Math.round(this.x) + 1;\r\n      x < this.x + Math.round(this.xSize) - 1;\r\n      x++\r\n    ) {\r\n      if (game.groundHeight[x] < height) {\r\n        height = game.groundHeight[x];\r\n      }\r\n    }\r\n    if (this.y < height - this.ySize) {\r\n      this.y += this.fallSpeed;\r\n      this.x += this.xDir;\r\n      this.xDir += this.xDir < 0 ? 0.008 : -0.008;\r\n      if (this.addTrail >= 4) {\r\n        this.addTrail = 0;\r\n        this.deprisTrail.push([\r\n          this.x + this.xSize / 2,\r\n          this.y + this.ySize / 2,\r\n          this.color\r\n        ]);\r\n      } else {\r\n        this.addTrail++;\r\n      }\r\n    } else {\r\n      if (this.hitGround === 0) this.hitGround = 1;\r\n      if (this.hitGround === 1) {\r\n        for (\r\n          let x = Math.round(this.x);\r\n          x < this.x + Math.round(this.xSize);\r\n          x++\r\n        ) {\r\n          game.groundHeight[x] = game.groundHeight[x] - this.ySize / 2;\r\n          this.hitGround = 2;\r\n        }\r\n      }\r\n      this.deprisTrail.shift();\r\n      this.deprisTrail.reverse();\r\n    }\r\n  }\r\n  draw(ctx) {\r\n    this.deprisTrail.reverse();\r\n    let fallTime = 0;\r\n    for (let x = 1; x < this.deprisTrail.length; x++) {\r\n      ctx.fillStyle = `rgba(265,165,0,${0.2 - fallTime / 200}`;\r\n      ctx.lineWidth = 2;\r\n      ctx.beginPath();\r\n      ctx.fillRect(\r\n        this.deprisTrail[x][0] - this.xSize / 2,\r\n        this.deprisTrail[x][1],\r\n        this.xSize * ((300 - fallTime * 5) / 300),\r\n        this.ySize * ((300 - fallTime * 5) / 300)\r\n      );\r\n      ctx.fill();\r\n      ctx.stroke();\r\n      ctx.closePath();\r\n      fallTime++;\r\n    }\r\n    if (this.deprisTrail.length > 4) {\r\n      this.deprisTrail.reverse();\r\n      this.deprisTrail.shift();\r\n    }\r\n\r\n    ctx.fillStyle = `rgba(${255 + this.y / 3},${\r\n      165 + (this.color - 1) * 33 + this.y / 6\r\n    },0,1)`;\r\n    ctx.fillRect(this.x, this.y, this.xSize, this.ySize);\r\n  }\r\n}\r\n","export default class Xplosion {\r\n  constructor(x, y, delay) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.color = \"rgba(255,165,0,0.4)\";\r\n    this.evol = 0;\r\n    this.delay = delay;\r\n  }\r\n  draw(ctx) {\r\n    if (this.delay <= 0) {\r\n      if (this.evol < 100) {\r\n        ctx.beginPath();\r\n        ctx.fillStyle = `rgba(${255 - this.evol / 100},165,0,0.25)`;\r\n        ctx.lineWidth = 0;\r\n        ctx.arc(this.x, this.y, this.evol, 0, 2 * Math.PI);\r\n        this.evol++;\r\n        ctx.fill();\r\n        ctx.closePath();\r\n      }\r\n    } else {\r\n      this.delay--;\r\n    }\r\n  }\r\n  update(game, element) {\r\n    if (this.evol > 100) {\r\n      game.xploArray[element].splice();\r\n    }\r\n  }\r\n}\r\n","import Debris from \"./debris\";\r\nimport Xplosion from \"./xplosion\";\r\nexport default class CollisionDetection {\r\n  update(ball, bricks, game) {\r\n    if (game.gameState > 0) {\r\n      bricks.brickArray.forEach((brick) => {\r\n        if (\r\n          ball.x + ball.radius * 2 >= brick[1] &&\r\n          ball.x <= brick[1] + bricks.sizeX &&\r\n          ball.y + ball.radius * 2 >= brick[2] &&\r\n          ball.y <= brick[2] + bricks.sizeY\r\n        ) {\r\n          if (brick[0] > 0) {\r\n            brick[0] -= 1;\r\n            if (brick[0] === 0) {\r\n              for (let x = 0; x < 10; x++) {\r\n                game.xploArray.push(\r\n                  new Xplosion(\r\n                    brick[1] + Math.random() * 20 - 10,\r\n                    brick[2] + Math.random() * 20 - 10,\r\n                    x * 10\r\n                  )\r\n                );\r\n              }\r\n            }\r\n            game.score += 1;\r\n            ball.ySpeed = -(ball.ySpeed / 1.5);\r\n            ball.xSpeed = -(ball.xSpeed / 1.5) + (Math.random() * 500 - 250);\r\n            ball.y += 3;\r\n            ball.ySpeed += 15;\r\n            let pieces = 4 + Math.random() * 10;\r\n            while (pieces > 0) {\r\n              game.debrisArray.push(\r\n                new Debris(\r\n                  Math.random() * 40 - 20 + brick[1],\r\n                  Math.random() * 20 - 10 + brick[2],\r\n                  [brick[0]],\r\n                  game\r\n                )\r\n              );\r\n              pieces--;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import Paddle from \"./paddle\";\r\nimport InputHandler from \"./input\";\r\nimport Ball from \"./ball\";\r\nimport Brick from \"./brick\";\r\nimport CollisionDetection from \"./collision\";\r\n\r\nlet startScreen = document.getElementById(\"startScreen\");\r\n\r\nexport default class Game {\r\n  constructor() {\r\n    this.paddle = new Paddle(this);\r\n    this.ball = new Ball(this);\r\n    this.brick = new Brick();\r\n    this.debrisArray = [];\r\n    this.groundHeight = [];\r\n    for (let x = 0; x < 800; x++) {\r\n      this.updateGround(x, 600);\r\n    }\r\n    this.xploArray = [];\r\n    this.score = 0;\r\n    this.bestScore = 0;\r\n    this.stage = 1;\r\n    this.collisionDetection = new CollisionDetection();\r\n    this.scoreDisplay = document.getElementById(\"score\");\r\n    this.audioSwitch = document.querySelector(\"input\");\r\n    this.bestScoreDisplay = document.getElementById(\"best\");\r\n    this.music = document.getElementById(\"bgaudio\");\r\n    let gameState = 0;\r\n    new InputHandler(this.paddle, this);\r\n  }\r\n  updateGround(x, height) {\r\n    this.groundHeight[x] = height;\r\n  }\r\n\r\n  update(time) {\r\n    if (this.gameState > 0) {\r\n      this.paddle.update();\r\n      this.ball.update(this.paddle, this);\r\n      this.brick.update();\r\n      this.collisionDetection.update(this.ball, this.brick, this);\r\n    }\r\n    if (this.gameState === 0) {\r\n      this.brick.end();\r\n      startScreen.hidden = false;\r\n      this.paddle.x = 300;\r\n    }\r\n    if (this.score > 4 * this.stage) {\r\n      this.brick.waitAndMoveBricks(this.stage);\r\n      this.stage += 1;\r\n    }\r\n    this.game = this;\r\n    this.debrisArray.forEach((debris) => {\r\n      debris.update(this);\r\n    });\r\n    if (this.audioSwitch.checked) {\r\n      this.music.play();\r\n    } else {\r\n      this.music.pause();\r\n    }\r\n  }\r\n\r\n  draw(ctx) {\r\n    this.brick.draw(ctx);\r\n    this.debrisArray.forEach((debris) => {\r\n      debris.draw(ctx);\r\n    });\r\n    this.xploArray.forEach((xplo, index) => {\r\n      xplo.draw(ctx);\r\n      xplo.update(this, index);\r\n    });\r\n    this.ball.draw(ctx);\r\n    this.paddle.draw(ctx);\r\n    this.scoreDisplay.textContent = this.score;\r\n    if (this.score > this.bestScoreDisplay.textContent) {\r\n      this.bestScoreDisplay.textContent = this.score;\r\n    }\r\n  }\r\n  start() {\r\n    startScreen.hidden = true;\r\n    this.debrisArray = [];\r\n    this.xploArray = [];\r\n    this.score = 0;\r\n    this.stage = 1;\r\n    this.brick.start();\r\n    this.gameState = 1;\r\n    this.ball.ballTrail = [];\r\n    this.groundHeight = [];\r\n    for (let x = 0; x < 800; x++) {\r\n      let height = 600;\r\n      this.groundHeight[x] = height;\r\n    }\r\n\r\n    this.music.currentTime = 0;\r\n    this.music.play();\r\n  }\r\n}\r\n","import \"./styles.css\";\nimport Game from \"./game.js\";\nlet canvas = document.getElementById(\"game\");\nlet ctx = canvas.getContext(\"2d\");\n\nlet game = new Game();\nlet lastTime = 0;\n\nfunction gameLoop(timestamp) {\n  let timeDiff = timestamp - lastTime;\n  lastTime = timestamp;\n\n  ctx.clearRect(0, 0, 800, 600);\n  game.update(timeDiff);\n  game.draw(ctx);\n\n  requestAnimationFrame(gameLoop);\n}\n\nrequestAnimationFrame(gameLoop);\n"]}