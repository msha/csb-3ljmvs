{"version":3,"sources":["src/paddle.js","src/input.js","src/ball.js","src/brick.js","src/rain.js","src/tutorial.js","src/audio.js","src/debris.js","src/xplosion.js","src/collision.js","src/game.js","src/index.js"],"names":["Paddle","game","width","height","maxSpeed","xStart","x","speed","color","initialAcc","dt","ctx","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","InputHandler","paddle","mobileInput","event","move","evnt","clientX","moveLeft","moveRight","touchMove","touches","gameState","start","document","addEventListener","removeEventListener","canvas","getElementById","keyCode","Ball","startX","startX2","startY","startXSpeed","startYSpeed","acceleration","wallBounce","graceWidth","ballTrail","slomo","firstHit","startPos","Math","round","random","y","radius","yReserve","xSpeed","ySpeed","fps","timeSample","randomLight","abs","endScreen","audio","menuStart","push","deaths","displayAnnouncement","beginPath","strokeStyle","lineWidth","arc","PI","stroke","fill","closePath","reverse","length","moveTo","lineTo","shift","Brick","sizeX","sizeY","brickPerRow","startCap","brickArray","doMoveBricks","moveToStage","colors","time","moveBricks","forEach","brick","location","hp","caps","cap","capY","count","other","generateBrickArray","stage","newArray","brickHp","beginGen","Rain","element","hrElement","counter","i","createElement","style","left","floor","animationDuration","animationDelay","appendChild","querySelectorAll","elm","remove","Tutorial","data","getInfo","tutorialText","movement","text","displayed","mousemovement","mobilemovement","levels","noob","rows","pro","specialText","bugs","debris","debrisGenerated","bit","music","read","getTexts","Object","values","getTutorialStatus","getSpecial","l","Audio","audioSwitch","querySelector","menumusic","gamemusic","playAudio","checked","play","pause","currentTime","Debris","xSize","ySize","fallSpeed","xDir","debrisTrail","addTrail","hitGround","groundHeight","fallTime","Xplosion","delay","evol","xploArray","splice","CollisionDetection","ball","bricks","score","pieces","debrisArray","startScreen","Game","updateGround","bestScore","tutorial","collisionDetection","scoreDisplay","tip","tipScore","tipBest","tipBestest","deathTexts","bestScoreDisplay","newHighScore","announcements","dark","rain","textQueue","alreadyDisplaying","update","waitAndMoveBricks","xplo","index","draw","textContent","end","hidden","reset","opacity","elment","moveDeathTextstoPos","fadeDarkness","setTimeout","getTutorialText","pop","innerHTML","fadeAnnouncement","dir","parseFloat","fadeInDarkness","transform","moveDeathTextsIn","updateData","getSpecialText","moveDeathTextsAway","getContext","lastTime","gameLoop","timestamp","time2","Date","clearRect","requestAnimationFrame","updateFrames"],"mappings":"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","file":"src.8c8a0d4a.js","sourceRoot":"..","sourcesContent":["export default class Paddle {\r\n  constructor(game) {\r\n    this.width = 100;\r\n    this.height = 20;\r\n    this.maxSpeed = 350;\r\n    this.xStart = 400 - this.width / 2;\r\n    this.x = this.xStart;\r\n    this.speed = 0;\r\n    this.color = \"#FFA500\";\r\n\r\n    this.initialAcc = 125;\r\n  }\r\n  update(dt) {\r\n    dt = dt / 4;\r\n    this.x += (this.speed * dt) / 100;\r\n    if (this.speed > 0) {\r\n      this.speed -= (1 * dt) / 2;\r\n    } else if (this.speed < 0) {\r\n      this.speed += (1 * dt) / 2;\r\n    }\r\n    if (this.x <= 0) {\r\n      this.x = 0;\r\n    }\r\n    if (this.x > 700) {\r\n      this.x = 700;\r\n    }\r\n    if (this.speed > this.maxSpeed) {\r\n      this.speed = this.maxSpeed;\r\n    }\r\n    if (this.speed < -this.maxSpeed) {\r\n      this.speed = -this.maxSpeed;\r\n    }\r\n  }\r\n\r\n  draw(ctx) {\r\n    let gradient = ctx.createLinearGradient(0, 800, 0, 0);\r\n    gradient.addColorStop(0, \"rgba(12, 12, 23, 1)\");\r\n    gradient.addColorStop(0.235, \"rgba(12, 12, 23, 1)\");\r\n    gradient.addColorStop(0.285, \"rgba(265,165,0,1)\");\r\n    gradient.addColorStop(1, \"rgba(12, 12, 23, 1)\");\r\n    ctx.fillStyle = gradient;\r\n\r\n    ctx.fillRect(this.x, 580, this.width, this.height);\r\n  }\r\n  moveLeft() {\r\n    this.speed -= this.initialAcc;\r\n  }\r\n  moveRight() {\r\n    this.speed += this.initialAcc;\r\n  }\r\n  reset() {\r\n    this.x = this.xStart;\r\n    this.speed = 0;\r\n  }\r\n  stop() {\r\n    this.speed = 0;\r\n  }\r\n}\r\n","export default class InputHandler {\r\n  constructor(paddle, game) {\r\n    this.canvas = document.getElementById(\"game\");\r\n    this.canvas.addEventListener(\"mousedown\", mobileInput);\r\n    this.canvas.addEventListener(\"touchstart\", mobileInput);\r\n\r\n    function mobileInput(event) {\r\n      if (game.gameState < 1 || typeof game.gameState === \"undefined\") {\r\n        game.start();\r\n      }\r\n      function move(evnt) {\r\n        if (evnt.clientX + paddle.width < paddle.x) {\r\n          paddle.moveLeft();\r\n        }\r\n        if (evnt.clientX > paddle.x + paddle.width) {\r\n          paddle.moveRight();\r\n        }\r\n      }\r\n      function touchMove(evnt) {\r\n        if (evnt.touches[0].clientX + paddle.width < paddle.x) {\r\n          paddle.moveLeft();\r\n        }\r\n        if (evnt.touches[0].clientX > paddle.x + paddle.width) {\r\n          paddle.moveRight();\r\n        }\r\n      }\r\n      document.addEventListener(\"mousemove\", move);\r\n      document.addEventListener(\"touchmove\", touchMove);\r\n      document.addEventListener(\"mouseup\", (event) => {\r\n        document.removeEventListener(\"mousemove\", move);\r\n      });\r\n      document.addEventListener(\"touchend\", (event) => {\r\n        document.removeEventListener(\"touchmove\", touchMove);\r\n      });\r\n    }\r\n    document.addEventListener(\"keydown\", (event) => {\r\n      switch (event.keyCode) {\r\n        case 37:\r\n          paddle.moveLeft();\r\n          break;\r\n\r\n        case 39:\r\n          paddle.moveRight();\r\n          break;\r\n        case 32:\r\n          if (game.gameState < 1 || typeof game.gameState === \"undefined\") {\r\n            game.start();\r\n          }\r\n          break;\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default class Ball {\r\n  constructor(game) {\r\n    this.startX = 50;\r\n    this.startX2 = 750;\r\n    this.startY = 100;\r\n    this.startXSpeed = 130;\r\n    this.startYSpeed = 0;\r\n    this.acceleration = 25;\r\n    this.wallBounce = 6;\r\n    this.graceWidth = 10;\r\n    this.ballTrail = [];\r\n    this.slomo = false;\r\n    this.firstHit = 0;\r\n    this.startPos = Math.round(Math.random());\r\n    this.x = this.startPos > 0 ? this.startX2 : this.startX;\r\n    this.y = this.startY;\r\n\r\n    this.radius = 8;\r\n    this.yReserve = 0;\r\n    this.color = \"rgba(255,165,0,1.000)\";\r\n\r\n    this.xSpeed = this.startPos > 0 ? -this.startXSpeed : this.startXSpeed;\r\n    this.ySpeed = this.startYSpeed;\r\n  }\r\n  update(paddle, game, dt) {\r\n    let fps = 1000 / dt;\r\n    dt = dt / 5;\r\n    let timeSample = fps > 240 ? 4 : fps > 180 ? 3 : fps > 120 ? 2 : 1;\r\n    if (!this.slomo) {\r\n      if (this.firstHit > 0) {\r\n        this.yReserve = this.firstHit / timeSample;\r\n        this.firstHit = 0;\r\n      }\r\n      this.x += (this.xSpeed * dt) / 200;\r\n      this.y += (this.ySpeed * dt) / 200;\r\n      this.ySpeed += 1 * dt;\r\n    } else {\r\n      this.x += (this.xSpeed * dt) / (200 * timeSample * dt);\r\n      this.y += (this.ySpeed * dt) / (200 * timeSample * dt);\r\n      this.ySpeed += ((1 * dt) / 8 / timeSample) * dt;\r\n      this.yReserve += ((1 * dt) / 8) * (dt / 4);\r\n    }\r\n    let randomLight = (Math.abs(this.ySpeed) + Math.abs(this.xSpeed)) / 10;\r\n    this.color = `rgba(${255 - randomLight},${165 - randomLight},0,1)`;\r\n\r\n    if (\r\n      this.y > 585 &&\r\n      this.x > paddle.x - this.graceWidth &&\r\n      this.x < paddle.x + (paddle.width + this.graceWidth)\r\n    ) {\r\n      this.ySpeed = -(this.ySpeed + this.acceleration);\r\n      this.xSpeed += paddle.speed + Math.random() * 50;\r\n      if (this.yReserve > 0) {\r\n        this.ySpeed -= this.yReserve * timeSample;\r\n        this.yReserve = 0;\r\n      }\r\n    }\r\n    if (this.y < 0) {\r\n      this.ySpeed = -(this.ySpeed - this.acceleration);\r\n    }\r\n    if (this.x > 800) {\r\n      this.xSpeed = -this.xSpeed;\r\n      this.x -= this.wallBounce;\r\n    }\r\n    if (this.x < 0) {\r\n      this.xSpeed = -this.xSpeed;\r\n      this.x += this.wallBounce;\r\n    }\r\n    if (this.y > 600) {\r\n      if (game.gameState > 0) {\r\n        game.endScreen();\r\n      }\r\n      game.gameState = 0;\r\n      game.audio.menuStart(game);\r\n    }\r\n    this.ballTrail.push([this.x, this.y, this.color]);\r\n    let speed = (Math.abs(this.ySpeed) + Math.abs(this.xSpeed)) / dt;\r\n    if (game.maxSpeed < speed) {\r\n      game.maxSpeed = Math.round(speed);\r\n      if (this.deaths > 0)\r\n        game.displayAnnouncement(`wow, new max speed ${game.maxSpeed}!`);\r\n    }\r\n  }\r\n  draw(ctx) {\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = this.color;\r\n    ctx.fillStyle = this.color;\r\n    ctx.lineWidth = 1;\r\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\r\n    ctx.stroke();\r\n    ctx.fill();\r\n    ctx.closePath();\r\n    this.ballTrail.reverse();\r\n    for (let x = 1; x < this.ballTrail.length; x++) {\r\n      ctx.strokeStyle = this.ballTrail[x][2];\r\n      ctx.lineWidth = x < 5 ? 15 : 15 * (75 / (75 + x * 4));\r\n      ctx.beginPath();\r\n      ctx.moveTo(this.ballTrail[x - 1][0], this.ballTrail[x - 1][1]);\r\n      ctx.lineTo(this.ballTrail[x][0], this.ballTrail[x][1]);\r\n      ctx.stroke();\r\n      ctx.closePath();\r\n    }\r\n    if (this.ballTrail.length > 150) {\r\n      this.ballTrail.reverse();\r\n      this.ballTrail.shift();\r\n    }\r\n  }\r\n  reset() {\r\n    this.ballTrail = [];\r\n    this.x = 1000;\r\n  }\r\n  start() {\r\n    this.x = this.startX;\r\n    this.y = this.startY;\r\n    this.xSpeed = this.startXSpeed;\r\n    this.ySpeed = this.startYSpeed;\r\n  }\r\n}\r\n","export default class Brick {\r\n  constructor() {\r\n    this.sizeX = 52;\r\n    this.sizeY = 20;\r\n    this.brickPerRow = 15;\r\n    this.startCap = 0;\r\n    this.brickArray = [];\r\n    this.doMoveBricks = 0;\r\n    this.moveToStage = 1;\r\n    this.colors = `rgba(255,${0 + (this.moveToStage - 1) * 33},${\r\n      0 + (this.moveToStage - 1) * 33\r\n    },1)`;\r\n  }\r\n  update(time) {\r\n    let dt = time / 4;\r\n    if (this.doMoveBricks > 0) {\r\n      this.doMoveBricks += 1 * dt;\r\n    }\r\n    if (this.doMoveBricks > 400) {\r\n      this.doMoveBricks = 0;\r\n      this.moveBricks(this.moveToStage);\r\n    }\r\n  }\r\n  draw(ctx) {\r\n    this.brickArray.forEach((brick) => {\r\n      ctx.fillStyle = this.colors = `rgba(255,${\r\n        165 + (brick[0] - 1) * 33\r\n      },0,1)`;\r\n\r\n      if (brick[0] > 0) {\r\n        ctx.fillRect(brick[1], brick[2], this.sizeX, this.sizeY);\r\n      }\r\n    });\r\n  }\r\n  generateBrickArray(location, hp, caps) {\r\n    let cap = this.startCap;\r\n    let capY = location * 2;\r\n    let count = 0;\r\n    let other = 0;\r\n    caps = typeof caps === \"undefined\" ? 0 : caps;\r\n    for (let x = 0; x < this.brickPerRow; x++) {\r\n      if (other > 0 || caps === 0) {\r\n        this.brickArray.push([\r\n          hp,\r\n          cap + x * this.sizeX,\r\n          capY + location * this.sizeY\r\n        ]);\r\n\r\n        if (count < this.brickPerRow - 1) {\r\n          cap += 2;\r\n          count++;\r\n        }\r\n        other--;\r\n      } else {\r\n        cap += 2;\r\n        other++;\r\n      }\r\n    }\r\n  }\r\n  beginGen() {\r\n    this.brickArray = [];\r\n    let firstRow = 2;\r\n    let secondRow = 2;\r\n    for (let x = 0; x < firstRow; x++) {\r\n      this.generateBrickArray(x, 2);\r\n    }\r\n    for (let x = 0; x < secondRow; x++) {\r\n      this.generateBrickArray(firstRow + x, 1, 1);\r\n    }\r\n  }\r\n  waitAndMoveBricks(stage) {\r\n    this.doMoveBricks = 1;\r\n    this.moveToStage = stage;\r\n  }\r\n  moveBricks(stage) {\r\n    let newArray = [];\r\n    let brickHp = Math.round(stage / 2) + 1;\r\n    this.brickArray.forEach((brick) => {\r\n      newArray.push([brick[0], brick[1], brick[2] + this.sizeY + 2]);\r\n    });\r\n    this.brickArray = newArray;\r\n\r\n    this.generateBrickArray(0, brickHp);\r\n  }\r\n  start() {\r\n    this.brickArray = [];\r\n    this.doMoveBricks = 0;\r\n    this.moveToStage = 2;\r\n    this.beginGen();\r\n  }\r\n  end() {\r\n    this.brickArray = [];\r\n  }\r\n}\r\n","export default class Rain {\r\n  start(element, count) {\r\n    let hrElement;\r\n    let counter = count;\r\n    for (let i = 0; i < counter; i++) {\r\n      hrElement = document.createElement(\"HR\");\r\n\r\n      hrElement.style.left = Math.floor(Math.random() * 1000) - 100 + \"px\";\r\n      hrElement.style.animationDuration = 0.2 + Math.random() * 0.3 + \"s\";\r\n      hrElement.style.animationDelay = Math.random() * 5 + \"s\";\r\n\r\n      element.appendChild(hrElement);\r\n    }\r\n  }\r\n  end() {\r\n    document.querySelectorAll(\"HR\").forEach((elm) => elm.remove());\r\n  }\r\n}\r\n","export default class Tutorial {\r\n  constructor(game) {\r\n    this.data = game.getInfo();\r\n    this.tutorialText = function (data) {\r\n      return {\r\n        movement: {\r\n          text: `use <i class=\"fa fa-caret-square-o-left\" style=\"font-size:36px\"></i> and <i class=\"fa fa-caret-square-o-right\" style=\"font-size:36px\"></i> to move`,\r\n          displayed: false\r\n        },\r\n        mousemovement: {\r\n          text: `you can also move with <i class=\"fa-solid fa-computer-mouse\"></i></i>`,\r\n          displayed: false\r\n        },\r\n        mobilemovement: {\r\n          text: `on mobile use your <i class=\"fa fa-hand-o-up\" style=\"font-size:36px\"></i> to move`,\r\n          displayed: false\r\n        },\r\n        levels: {\r\n          text: `for every 4 score you get a new row of bricks`,\r\n          displayed: false\r\n        },\r\n        noob: {\r\n          text: `best way to get points is to not die and destroy every brick`,\r\n          displayed: false\r\n        },\r\n        rows: {\r\n          text: `on every 2 rows bricks get tougher to destroy`,\r\n          displayed: false\r\n        },\r\n\r\n        pro: {\r\n          text: `try turning the music up`,\r\n          displayed: false\r\n        }\r\n      };\r\n    };\r\n    this.specialText = function (data) {\r\n      return {\r\n        bugs: {\r\n          text: `there are no bugs, only features`,\r\n          displayed: false\r\n        },\r\n        speed: {\r\n          text: `max speed you have achieved with your balls is ${data.maxSpeed} `,\r\n          displayed: false\r\n        },\r\n        deaths: {\r\n          text: `you have died ${data.deaths} time${\r\n            data.deaths > 1 ? \"s\" : data.deaths > 10 ? \"s that's alot\" : \"\"\r\n          }!`,\r\n          displayed: false\r\n        },\r\n        debris: {\r\n          text: `you have littered the streets with ${data.debrisGenerated} pieces of thrash!`,\r\n          displayed: false\r\n        },\r\n        bit: {\r\n          text: `we have mined ${\r\n            data.debrisGenerated * data.deaths * data.maxSpeed\r\n          } poopcoins on your computer while you were playing!`,\r\n          displayed: false\r\n        },\r\n        music: {\r\n          text: `music is Power Glove - Motorcycle Cop`,\r\n          displayed: false\r\n        },\r\n        stage: {\r\n          text: `highest stage you have reached is ${data.stage - 1}`,\r\n          displayed: false\r\n        }\r\n      };\r\n    };\r\n    this.read = 0;\r\n    this.getTexts = Object.values(this.tutorialText(this.data));\r\n  }\r\n  getTutorialText() {\r\n    if (this.getTutorialStatus()) return \"\";\r\n    for (let x = 0; x < this.getTexts.length; x++) {\r\n      if (!this.getTexts[x].displayed) {\r\n        this.getTexts[x].displayed = true;\r\n        this.read++;\r\n        return this.getTexts[x].text;\r\n      }\r\n    }\r\n  }\r\n  getData() {\r\n    return this.data;\r\n  }\r\n  updateData(data) {\r\n    this.data = data;\r\n  }\r\n  getSpecialText() {\r\n    this.getSpecial = Object.values(this.specialText(this.data));\r\n    let l = this.getSpecial.length;\r\n    return this.getSpecial[Math.floor(Math.random() * l)].text;\r\n  }\r\n  getTutorialStatus() {\r\n    return this.read === this.getTexts.length;\r\n  }\r\n}\r\n","export default class Audio {\r\n  constructor() {\r\n    this.audioSwitch = document.querySelector(\"input\");\r\n    this.menumusic = document.getElementById(\"menuaudio\");\r\n    this.gamemusic = document.getElementById(\"gameaudio\");\r\n    this.playAudio = false;\r\n  }\r\n  update(game) {\r\n    if (this.audioSwitch.checked) {\r\n      this.playAudio = true;\r\n      if (game.gameState === 0 || typeof game.gameState === \"undefined\") {\r\n        this.menumusic.play();\r\n        this.gamemusic.pause();\r\n      } else {\r\n        this.menumusic.pause();\r\n        this.gamemusic.play();\r\n      }\r\n    } else {\r\n      this.playAudio = false;\r\n      this.menumusic.pause();\r\n      this.gamemusic.pause();\r\n    }\r\n  }\r\n  start() {\r\n    this.gamemusic.currentTime = 0;\r\n  }\r\n  menuStart(game) {\r\n    this.gamemusic.pause();\r\n    this.menumusic.play();\r\n    if (this.audioSwitch.checked) {\r\n      this.menumusic.currentTime = 0;\r\n      this.gamemusic.pause();\r\n      this.menumusic.play();\r\n    } else {\r\n      this.playAudio = false;\r\n      this.menumusic.pause();\r\n      this.gamemusic.pause();\r\n    }\r\n  }\r\n}\r\n","export default class Debris {\r\n  constructor(x, y, color) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.xSize = 15 + Math.random() * 25;\r\n    this.ySize = 9 + Math.random() * 12;\r\n    this.fallSpeed = 2;\r\n    this.color = color;\r\n    this.xDir = Math.random() * 4 - 2;\r\n    this.debrisTrail = [];\r\n    this.addTrail = 0;\r\n    this.hitGround = 0;\r\n  }\r\n  update(game, dt) {\r\n    dt = dt / 8;\r\n    let height = 10000;\r\n    for (\r\n      let x = Math.round(this.x) + 1;\r\n      x < this.x + Math.round(this.xSize) - 1;\r\n      x++\r\n    ) {\r\n      if (game.groundHeight[x] < height) {\r\n        height = game.groundHeight[x];\r\n      }\r\n    }\r\n    if (\r\n      this.y <= height - this.ySize ||\r\n      this.x <= 0 ||\r\n      this.x + this.xSize >= 800 ||\r\n      this.y > 600\r\n    ) {\r\n      this.y += this.fallSpeed * dt;\r\n      if (\r\n        this.x + this.xDir * dt - this.xSize >= 0 ||\r\n        this.x + this.xDir * dt + this.xSize <= 800\r\n      ) {\r\n        this.x += this.xDir * dt;\r\n      } else {\r\n        this.x -= this.xDir * dt;\r\n      }\r\n\r\n      this.xDir += this.xDir < 0 ? 0.008 : -0.008;\r\n      let fps = 1000 / dt;\r\n      dt = dt / 5;\r\n      let timeSample = fps > 240 ? 4 : fps > 180 ? 3 : fps > 120 ? 2 : 1;\r\n      if (this.addTrail > 3 + timeSample) {\r\n        this.addTrail = 0;\r\n        this.debrisTrail.push([\r\n          this.x + this.xSize / 2,\r\n          this.y + this.ySize / 2,\r\n          this.color\r\n        ]);\r\n      } else {\r\n        this.addTrail++;\r\n      }\r\n    } else {\r\n      this.debrisTrail.shift();\r\n      if (this.hitGround === 0) this.hitGround = 1;\r\n      if (this.hitGround === 1) {\r\n        for (\r\n          let x = Math.round(this.x);\r\n          x < this.x + Math.round(this.xSize);\r\n          x++\r\n        ) {\r\n          game.groundHeight[x] = game.groundHeight[x] - this.ySize / 3;\r\n          this.hitGround = 2;\r\n        }\r\n      }\r\n    }\r\n    if (this.debrisTrail.length > 4 || this.hitGround > 0) {\r\n      this.debrisTrail.shift();\r\n    }\r\n  }\r\n  draw(ctx) {\r\n    let fallTime = 0;\r\n    for (let x = 1; x < this.debrisTrail.length; x++) {\r\n      ctx.fillStyle = `rgba(265,165,0,${0 + x / 5}`;\r\n      ctx.lineWidth = 2;\r\n      ctx.beginPath();\r\n      ctx.fillRect(\r\n        this.debrisTrail[x][0] - this.xSize / 2,\r\n        this.debrisTrail[x][1] - this.ySize / 2,\r\n        this.xSize * ((300 - fallTime * 5) / 300),\r\n        this.ySize * ((300 - fallTime * 5) / 300)\r\n      );\r\n      ctx.fill();\r\n      ctx.stroke();\r\n      ctx.closePath();\r\n      fallTime++;\r\n    }\r\n\r\n    ctx.fillStyle = `rgba(${255 - this.y / 2.5},${\r\n      165 + (this.color - 1) * 33 - this.y / 2.9\r\n    },0,1)`;\r\n    ctx.fillRect(this.x, this.y, this.xSize, this.ySize);\r\n  }\r\n}\r\n","export default class Xplosion {\r\n  constructor(x, y, delay) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.color = \"rgba(255,165,0,0.4)\";\r\n    this.evol = 0;\r\n    this.delay = delay;\r\n    this.dt;\r\n  }\r\n  draw(ctx) {\r\n    if (this.delay <= 0) {\r\n      if (this.evol < 100) {\r\n        ctx.beginPath();\r\n        ctx.fillStyle = `rgba(${\r\n          this.evol < 50\r\n            ? 255 - this.evol\r\n            : this.evol < 60\r\n            ? 200 - this.evol * 1.1\r\n            : 100 - this.evol\r\n        },${\r\n          this.evol < 20\r\n            ? 255 - this.evol\r\n            : this.evol < 60\r\n            ? 165 - this.evol * 1.1\r\n            : 100 - this.evol\r\n        },${\r\n          this.evol < 10\r\n            ? 255 - this.evol\r\n            : this.evol < 60\r\n            ? 0\r\n            : 100 - this.evol\r\n        },${this.evol < 5 ? 1 : 0.25})`;\r\n        ctx.lineWidth = 0;\r\n        ctx.arc(this.x, this.y, this.evol, 0, 2 * Math.PI);\r\n        this.evol += this.dt;\r\n        ctx.fill();\r\n        ctx.closePath();\r\n      }\r\n    } else {\r\n      this.delay--;\r\n    }\r\n  }\r\n  update(game, element, time) {\r\n    this.dt = 1 * Math.round(Math.abs(time / 8));\r\n    if (this.evol > 100) {\r\n      game.xploArray.splice(element, 1);\r\n    }\r\n  }\r\n}\r\n","import Debris from \"./debris\";\r\nimport Xplosion from \"./xplosion\";\r\nexport default class CollisionDetection {\r\n  update(ball, bricks, game) {\r\n    if (game.gameState > 0) {\r\n      bricks.brickArray.forEach((brick) => {\r\n        if (brick[0] > 0) {\r\n          if (\r\n            ball.x + ball.radius * 2 >= brick[1] &&\r\n            ball.x <= brick[1] + bricks.sizeX &&\r\n            ball.y + ball.radius * 2 >= brick[2] &&\r\n            ball.y <= brick[2] + bricks.sizeY\r\n          ) {\r\n            brick[0] -= 1;\r\n            if (brick[0] === 0) {\r\n              game.score += 1;\r\n              for (let x = 0; x < 10; x++) {\r\n                game.xploArray.push(\r\n                  new Xplosion(\r\n                    brick[1] + Math.random() * 20 - 10,\r\n                    brick[2] + Math.random() * 20 - 10,\r\n                    x * 10\r\n                  )\r\n                );\r\n              }\r\n            }\r\n\r\n            ball.ySpeed = -(ball.ySpeed / 1.2);\r\n            ball.xSpeed = -(ball.xSpeed / 1.5) + (Math.random() * 500 - 250);\r\n            ball.y += 4;\r\n            ball.ySpeed += 20;\r\n            let pieces = 5 + Math.random() * 12;\r\n            while (pieces > 0) {\r\n              game.debrisGenerated++;\r\n              game.debrisArray.push(\r\n                new Debris(\r\n                  Math.random() * 40 - 20 + brick[1],\r\n                  Math.random() * 20 - 10 + brick[2],\r\n                  [brick[0]],\r\n                  game\r\n                )\r\n              );\r\n              pieces--;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import Paddle from \"./paddle\";\r\nimport InputHandler from \"./input\";\r\nimport Ball from \"./ball\";\r\nimport Brick from \"./brick\";\r\nimport Rain from \"./rain\";\r\nimport Tutorial from \"./tutorial\";\r\nimport Audio from \"./audio\";\r\nimport CollisionDetection from \"./collision\";\r\n\r\nlet startScreen = document.getElementById(\"startScreen\");\r\n\r\nexport default class Game {\r\n  constructor() {\r\n    this.paddle = new Paddle(this);\r\n    this.ball = new Ball(this);\r\n    this.brick = new Brick();\r\n    this.audio = new Audio(this);\r\n    this.debrisArray = [];\r\n    this.groundHeight = [];\r\n    for (let x = 0; x < 800; x++) {\r\n      this.updateGround(x, 600);\r\n    }\r\n    this.xploArray = [];\r\n    this.score = 0;\r\n    this.bestScore = 0;\r\n    this.stage = 2;\r\n    this.deaths = 0;\r\n    this.debrisGenerated = 0;\r\n    this.maxSpeed = 0;\r\n    this.tutorial = new Tutorial(this);\r\n    this.collisionDetection = new CollisionDetection();\r\n    this.scoreDisplay = document.getElementById(\"score\");\r\n\r\n    this.tip = document.getElementById(\"deathTip\");\r\n    this.tipScore = document.getElementById(\"deathScore\");\r\n    this.tipBest = document.getElementById(\"deathBest\");\r\n    this.tipBestest = document.getElementById(\"deathBestest\");\r\n    this.deathTexts = document.querySelectorAll(\".deathText\");\r\n\r\n    this.bestScoreDisplay = document.getElementById(\"best\");\r\n    this.newHighScore = 0;\r\n    this.announcements = document.getElementById(\"announcements\");\r\n    this.dark = document.getElementById(\"darkness\");\r\n    this.rain = new Rain();\r\n    this.canvas = document.getElementById(\"rain\");\r\n    this.rain.start(this.canvas, 33);\r\n    this.textQueue = [];\r\n    this.alreadyDisplaying = false;\r\n    let gameState = 0;\r\n    new InputHandler(this.paddle, this);\r\n  }\r\n  updateGround(x, height) {\r\n    this.groundHeight[x] = height;\r\n  }\r\n\r\n  update(time) {\r\n    this.audio.update(this);\r\n\r\n    if (this.gameState > 0) {\r\n      this.paddle.update(time);\r\n      this.ball.update(this.paddle, this, time);\r\n      this.brick.update(time);\r\n      this.collisionDetection.update(this.ball, this.brick, this);\r\n    }\r\n    if (this.score + 4 >= 4 * this.stage) {\r\n      this.stage += 1;\r\n      this.displayAnnouncement(\"new set of enemy bricks approaching\");\r\n      this.brick.waitAndMoveBricks(this.stage);\r\n      this.rain.start(this.canvas, 10);\r\n    }\r\n    this.game = this;\r\n    this.debrisArray.forEach((debris) => {\r\n      debris.update(this, time);\r\n    });\r\n    this.xploArray.forEach((xplo, index) => {\r\n      xplo.update(this, index, time);\r\n    });\r\n  }\r\n\r\n  draw(ctx) {\r\n    this.brick.draw(ctx);\r\n    this.debrisArray.forEach((debris) => {\r\n      debris.draw(ctx);\r\n    });\r\n    this.xploArray.forEach((xplo, index) => {\r\n      xplo.draw(ctx);\r\n    });\r\n    this.ball.draw(ctx);\r\n    this.paddle.draw(ctx);\r\n    this.scoreDisplay.textContent = this.score;\r\n    if (this.score > this.bestScore) {\r\n      this.bestScore = this.score;\r\n      this.bestScoreDisplay.textContent = this.score;\r\n      if (this.newHighScore === 0 && this.score > 5) {\r\n        this.displayAnnouncement(\r\n          `impressive officer!<br> you got a new high score <br> 🔥🔥🔥${this.score}🔥🔥🔥 `\r\n        );\r\n      }\r\n      this.newHighScore = 1;\r\n    }\r\n  }\r\n  start() {\r\n    this.rain.end();\r\n    this.brick.end();\r\n    startScreen.hidden = true;\r\n    this.debrisArray = [];\r\n    this.xploArray = [];\r\n    this.score = 0;\r\n    this.stage = 2;\r\n    this.brick.start();\r\n    this.ball.start();\r\n    this.paddle.reset();\r\n    this.gameState = 1;\r\n    this.ball.ballTrail = [];\r\n    this.groundHeight = [];\r\n    this.newHighScore = 0;\r\n    this.audio.start();\r\n    this.dark.style.opacity = 1;\r\n    this.deathTexts.forEach((elment) => {\r\n      elment.hidden = true;\r\n    });\r\n    this.moveDeathTextstoPos();\r\n    this.fadeDarkness(true);\r\n    this.ball.slomo = true;\r\n    setTimeout(() => {\r\n      this.ball.slomo = false;\r\n    }, 3000);\r\n\r\n    for (let x = 0; x < 800; x++) {\r\n      let height = 600;\r\n      this.groundHeight[x] = height;\r\n    }\r\n    this.canvas = document.getElementById(\"rain\");\r\n    this.rain.start(this.canvas, 5);\r\n\r\n    let doTutorial = function (game) {\r\n      game.displayAnnouncement(game.tutorial.getTutorialText());\r\n    };\r\n    doTutorial(this);\r\n  }\r\n  displayAnnouncement(text) {\r\n    if (!this.alreadyDisplaying) {\r\n      this.alreadyDisplaying = true;\r\n      this.announcements.innerHTML = `<h2>${text}</h2>`;\r\n      this.announcements.style.opacity = 1;\r\n      setTimeout(() => {\r\n        this.fadeAnnouncement();\r\n        this.alreadyDisplaying = false;\r\n      }, 4000);\r\n    } else {\r\n      this.textQueue.push(text);\r\n      setTimeout(() => {\r\n        this.displayAnnouncement(this.textQueue.pop());\r\n      }, 100);\r\n    }\r\n  }\r\n  fadeAnnouncement() {\r\n    setTimeout(() => {\r\n      if (this.announcements.style.opacity > 0) {\r\n        this.announcements.style.opacity -= 0.05;\r\n        this.fadeAnnouncement();\r\n      }\r\n    }, 50);\r\n  }\r\n  fadeDarkness(dir) {\r\n    setTimeout(() => {\r\n      if (dir) {\r\n        this.dark.style.opacity -= 0.01;\r\n        if (this.dark.style.opacity > 0.2) {\r\n          this.fadeDarkness(true);\r\n        }\r\n      }\r\n    }, 40);\r\n  }\r\n  fadeInDarkness(dir) {\r\n    setTimeout(() => {\r\n      if (dir) {\r\n        this.dark.style.opacity = parseFloat(this.dark.style.opacity) + 0.01;\r\n        if (this.dark.style.opacity <= 1) {\r\n          this.fadeInDarkness(true);\r\n        }\r\n      }\r\n    }, 40);\r\n  }\r\n  moveDeathTextsAway() {\r\n    this.deathTexts.forEach((elment, index) => {\r\n      elment.style.transform = `translate(${-1000 * (index + 1)}px,0px)`;\r\n    });\r\n  }\r\n  moveDeathTextstoPos() {\r\n    this.deathTexts.forEach((elment, index) => {\r\n      elment.style.transform = `translate(2000px,0px)`;\r\n    });\r\n  }\r\n  moveDeathTextsIn() {\r\n    this.deathTexts.forEach((elment, index) => {\r\n      elment.style.transform = `translate(0px,0px)`;\r\n    });\r\n  }\r\n\r\n  endScreen() {\r\n    this.deaths++;\r\n    this.fadeInDarkness(true);\r\n    this.moveDeathTextsIn();\r\n    this.tutorial.updateData(this.getInfo());\r\n    startScreen.hidden = true;\r\n    this.tip.innerHTML = this.tutorial.getSpecialText();\r\n    this.tipScore.innerHTML = this.score;\r\n    this.tipBest.innerHTML = this.bestScore;\r\n    this.deathTexts.forEach((elment) => {\r\n      elment.hidden = false;\r\n    });\r\n    if (this.score === this.bestScore) {\r\n      this.tipBestest.innerHTML =\r\n        \"🔥🔥which is your bestest score hell yes motherfucker!!🔥🔥\";\r\n    } else {\r\n      this.tipBestest.hidden = true;\r\n    }\r\n\r\n    this.ball.reset();\r\n    setTimeout(() => {\r\n      if (this.gameState !== 1) {\r\n        this.moveDeathTextsAway();\r\n        this.fadeDarkness();\r\n      }\r\n    }, 13500);\r\n    setTimeout(() => {\r\n      if (this.gameState !== 1) {\r\n        startScreen.hidden = false;\r\n        this.fadeInDarkness();\r\n      }\r\n    }, 15000);\r\n  }\r\n  getInfo() {\r\n    let data = {\r\n      bestScore: this.bestScore,\r\n      maxSpeed: this.maxSpeed,\r\n      deaths: this.deaths,\r\n      debrisGenerated: this.debrisGenerated,\r\n      stage: this.stage\r\n    };\r\n\r\n    return data;\r\n  }\r\n}\r\n","import \"./styles.css\";\nimport Game from \"./game.js\";\nlet canvas = document.getElementById(\"game\");\nlet ctx = canvas.getContext(\"2d\");\n\nlet game = new Game();\nlet lastTime = 0;\nlet fps = 0;\n\nfunction gameLoop(timestamp) {\n  var time2 = new Date();\n  fps = 1000 / (time2 - time);\n  var dt = time2 - time;\n  time = time2;\n\n  ctx.clearRect(0, 0, 800, 600);\n  game.update(dt);\n  game.draw(ctx);\n\n  requestAnimationFrame(gameLoop);\n}\nvar time = new Date(),\n  i = 0;\nrequestAnimationFrame(gameLoop);\n\nfunction updateFrames() {\n  setTimeout(() => {\n    document.getElementById(\"fpsCounter\").innerHTML = Math.round(fps);\n    updateFrames();\n  }, 100);\n}\nupdateFrames();\n"]}